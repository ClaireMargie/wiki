
before_script:
  - curl -LO https://releases.rancher.com/cli/v0.6.2/rancher-linux-amd64-v0.6.2.tar.gz
  - tar zxf rancher-linux-amd64-v0.6.2.tar.gz
  
build_test:
  tags:
    - shell
  script: |
    set -x
    # put info about this commit/branch into /info.txt
    echo Information > info.txt
    echo "Branch: ${CI_COMMIT_BRANCH}" >> info.txt
    echo "Commit: ${CI_COMMIT_SHA}" >> info.txt
    echo "Commit comment:" >> info.txt
    echo " ${CI_COMMIT_MESSAGE}" >> info.txt
    echo "Build time: $(date)" >> info.txt

    # get markdown pages for easybuild modules
    rm -rf easybuild-life-sciences-main main.zip ./_scicomputing/bio-modules-18.04.md.orig
    # faster than cloning:
    curl -LO https://github.com/FredHutch/easybuild-life-sciences/archive/refs/heads/main.zip
    unzip -qq main.zip
    cp easybuild-life-sciences-main/docs/_r/* ./_rModules/
    cp easybuild-life-sciences-main/docs/_python/* ./_pythonModules/
    cp easybuild-life-sciences-main/docs/bio-modules-18.04.md ./_scicomputing/bio-modules-18.04.md.orig
    FIRST_BLANK_LINE=$(grep -n -m 1 '^$' ./_scicomputing/bio-modules-18.04.md.orig | cut -d: -f1)
    echo "---" >> ./_scicomputing/bio-modules-18.04.md
    echo "title: Scientific Software BioModules" >> ./_scicomputing/bio-modules-18.04.md
    echo "primary_reviewers: fizwit" >> ./_scicomputing/bio-modules-18.04.md
    echo "toc: false" >> ./_scicomputing/bio-modules-18.04.md
    echo  "---" >> ./_scicomputing/bio-modules-18.04.md
    echo >> ./_scicomputing/bio-modules-18.04.md
    tail -n +$FIRST_BLANK_LINE ./_scicomputing/bio-modules-18.04.md.orig >> ./_scicomputing/bio-modules-18.04.md
    rm -rf easybuild-life-sciences-main main.zip ./_scicomputing/bio-modules-18.04.md.orig

    if [ "$CI_COMMIT_BRANCH" == "main" ]; then
      export JEKYLL_ENV=production
    else
      export JEKYLL_ENV=development
    fi
    # build image
    docker build --build-arg JEKYLL_ENV=$JEKYLL_ENV -t dockerimages.fhcrc.org/wiki:latest .

    # build search index
    # run image and copy HTML files out of it
    docker run -d --rm --name wiki dockerimages.fhcrc.org/wiki:latest
    rm -rf tmp && mkdir tmp
    docker cp wiki:/usr/share/nginx/html/ ./tmp/
    docker rm -f wiki
    docker pull elasticsearch:8.4.0
    docker network create wiki-indexer || true
    # run an instance of elasticsearch
    docker rm -f elasticsearch || true
    docker run --network wiki-indexer -d --rm --name elasticsearch -p 9200:9200 -e "discovery.type=single-node" -e "xpack.security.enabled=false" -e "ingest.geoip.downloader.enabled=false"  elasticsearch:8.4.0
    sleep 20
    # create sciwiki0 index
    curl -X PUT "http://localhost:9200/sciwiki0/" -H 'Content-Type: application/json'
    # index wiki pages
    docker build -t indexer elasticsearch/
    # run indexer script
    docker run --network wiki-indexer --rm --name indexer -v $(pwd)/tmp:/html indexer
    curl -X POST "http://localhost:9200/sciwiki0/_flush" -H 'Content-Type: application/json'
    # save elasticsearch image (with indexed docs) 
    docker commit elasticsearch dockerimages.fhcrc.org/wiki_elasticsearch:latest
    # clean up
    docker rm -f elasticsearch
    rm -rf tmp





# build for every branch EXCEPT main and push to preview site
# https://sciwiki-preview.fredhutch.org (only accessible inside
# hutch network). See 
# https://sciwiki-preview.fredhutch.org/info.txt for branch
# and commit information.

deploy_preview:
  stage: deploy
  tags:
    - shell
  except: 
    refs:
      - main
  script:
    - docker login --username $DOCKERIMAGES_USER --password $DOCKERIMAGES_PASS https://dockerimages.fhcrc.org
    - docker tag dockerimages.fhcrc.org/wiki:latest dockerimages.fhcrc.org/wiki-preview:latest 
    - docker tag dockerimages.fhcrc.org/wiki_elasticsearch:latest dockerimages.fhcrc.org/wiki_elasticsearch-preview:latest
    - docker push dockerimages.fhcrc.org/wiki-preview:latest
    - docker push dockerimages.fhcrc.org/wiki_elasticsearch-preview:latest
    - sleep 15
    - rancher-v0.6.2/rancher --url https://ponderosa.fhcrc.org --access-key $PREVIEW_RANCHERAPI_KEY --secret-key $PREVIEW_RANCHERAPI_SECRET up -d --pull --force-upgrade --confirm-upgrade --stack wiki_preview --file docker-compose-preview.yml --rancher-file rancher-compose.yml

# deploy `main` branch to
# https://sciwiki.fredhutch.org

deploy:
  stage: deploy
  tags:
    - shell
  only:
    refs:
       - main
  script: |
    # find orphan assets
    rm -f orphans.txt*
    for F in $(find assets/* -type f) ; do grep -r -q $F * || echo "$F"; done > orphans.txt.tmp
    #cat orphans.txt.tmp | fgrep -v "assets/css/" | fgrep -v "assets/js/" > orphans.txt
    fgrep -v "assets/css/" orphans.txt.tmp > orphans.txt.css || true
    fgrep -v "assets/js/" orphans.txt.css > orphans.txt || true
    ls -l orphans.txt
    echo "---"
    if [ -s orphans.txt ] ; then
      echo "Orphan files found:"
      cat orphans.txt
      # This files an issue. 
      # It seems to be a little tricky to figure out the github ID of
      # whoever made the commit introducing the orphan asset(s). 
      # So leaving that bit out for now.
      rm -f issue.txt
      echo "There are one or more orphan assets in the wiki. " > issue.txt
      echo "These are images or other files that are not linked to." >> issue.txt
      echo "Please remove them and push again." >> issue.txt
      echo "Then you can close this issue." >> issue.txt
      echo >> issue.txt
      echo "Orphan files:" >> issue.txt
      echo >> issue.txt
      cat orphans.txt >> issue.txt
      gh issue create --title "Orphan asset files in wiki" --body-file issue.txt
      # Should we really break the build here? We have created an issue
      # so not sure if breaking the build would be redundant. 
      # Leaving it as is for now.
      exit 1
    fi
    docker login --username $DOCKERIMAGES_USER --password $DOCKERIMAGES_PASS https://dockerimages.fhcrc.org
    docker push dockerimages.fhcrc.org/wiki:latest
    docker push dockerimages.fhcrc.org/wiki_elasticsearch:latest
    sleep 15
    rancher-v0.6.2/rancher --url https://ponderosa.fhcrc.org --access-key $RANCHERAPI_KEY --secret-key $RANCHERAPI_SECRET up -d --pull --force-upgrade --confirm-upgrade --stack wiki --file docker-compose.yml --rancher-file rancher-compose.yml
  
